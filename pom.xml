<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>dev.vality</groupId>
		<artifactId>service-parent-pom</artifactId>
		<version>2.1.4</version>
	</parent>

	<artifactId>mayday</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>mayday</name>
	<description>mayday</description>


	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>17</java.version>
		<server.port>8022</server.port>
		<management.port>8023</management.port>
		<exposed.ports>${management.port} ${server.port}</exposed.ports>

		<db.user>postgres</db.user>
		<db.password>postgres</db.password>
		<db.schema>md</db.schema>
		<db.port>5432</db.port>
		<db.name>mayday</db.name>
		<db.url>jdbc:postgresql://localhost:${db.port}/${db.name}</db.url>

		<schedlock.version>4.36.0</schedlock.version>
		<spring-cloud.version>2022.0.2</spring-cloud.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- vality -->
		<dependency>
			<groupId>dev.vality</groupId>
			<artifactId>mayday-proto</artifactId>
			<version>SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>dev.vality</groupId>
			<artifactId>alert-tg-bot-proto</artifactId>
			<version>1.4-adf83ed</version>
		</dependency>
		<dependency>
			<groupId>dev.vality</groupId>
			<artifactId>db-common-lib</artifactId>
		</dependency>
		<dependency>
			<groupId>dev.vality</groupId>
			<artifactId>msgpack-proto</artifactId>
		</dependency>
		<dependency>
			<groupId>dev.vality.geck</groupId>
			<artifactId>common</artifactId>
		</dependency>

		<!-- spring -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!--third party-->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		<dependency>
			<groupId>net.javacrumbs.shedlock</groupId>
			<artifactId>shedlock-spring</artifactId>
			<version>${schedlock.version}</version>
		</dependency>
		<dependency>
			<groupId>net.javacrumbs.shedlock</groupId>
			<artifactId>shedlock-provider-jdbc-template</artifactId>
			<version>${schedlock.version}</version>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-core</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.11.0</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
		</dependency>
		<dependency>
			<groupId>io.fabric8</groupId>
			<artifactId>kubernetes-client</artifactId>
		</dependency>




		<!-- JOOQ Generator -->
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq</artifactId>
		</dependency>

		<!-- test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>dev.vality</groupId>
			<artifactId>testcontainers-annotations</artifactId>
			<version>2.0.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.fabric8</groupId>
			<artifactId>kubernetes-server-mock</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
		<testSourceDirectory>${project.basedir}/src/test/java</testSourceDirectory>
		<resources>
			<resource>
				<directory>${project.build.directory}/maven-shared-archive-resources</directory>
				<targetPath>${project.build.directory}</targetPath>
				<includes>
					<include>Dockerfile</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>${project.build.directory}/maven-shared-archive-resources</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>Dockerfile</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>dev.vality.maven.plugins</groupId>
				<artifactId>pg-embedded-plugin</artifactId>
				<version>1.0.1</version>
				<dependencies>
				    <dependency>
				    	<groupId>io.zonky.test</groupId>
				    	<artifactId>embedded-postgres</artifactId>
				    	<version>2.0.3</version>
				    </dependency>
				</dependencies>
				<configuration>
					<port>${db.port}</port>
					<dbName>${db.name}</dbName>
					<schemas>
						<schema>${db.schema}</schema>
					</schemas>
				</configuration>
				<executions>
					<execution>
						<id>PG_server_start</id>
						<phase>initialize</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>PG_server_stop</id>
						<phase>compile</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-maven-plugin</artifactId>
				<version>${flyway.version}</version>
				<configuration>
					<placeholderReplacement>false</placeholderReplacement>
					<url>${db.url}</url>
					<user>${db.user}</user>
					<password>${db.password}</password>
					<schemas>
						<schema>${db.schema}</schema>
					</schemas>
				</configuration>
				<executions>
					<execution>
						<id>migrate</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>migrate</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.postgresql</groupId>
						<artifactId>postgresql</artifactId>
						<version>${postgresql.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>
				<version>${jooq.version}</version>
				<executions>
					<execution>
						<id>gen-src</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.postgresql</groupId>
						<artifactId>postgresql</artifactId>
						<version>${postgresql.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<jdbc>
						<driver>org.postgresql.Driver</driver>
						<url>${db.url}</url>
						<user>${db.user}</user>
						<password>${db.password}</password>
					</jdbc>
					<generator>
						<generate>
							<javaTimeTypes>true</javaTimeTypes>
							<pojos>true</pojos>
							<pojosEqualsAndHashCode>true</pojosEqualsAndHashCode>
							<pojosToString>true</pojosToString>
						</generate>
						<database>
							<name>org.jooq.meta.postgres.PostgresDatabase</name>
							<includes>.*</includes>
							<excludes>schema_version|flyway_schema_history|shedlock.*</excludes>
							<inputSchema>${db.schema}</inputSchema>
						</database>
						<target>
							<packageName>dev.vality.alerting.mayday.domain</packageName>
							<directory>target/generated-sources/jooq</directory>
						</target>
					</generator>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-remote-resources-plugin</artifactId>
				<version>3.0.0</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.shared</groupId>
						<artifactId>maven-filtering</artifactId>
						<version>3.3.0</version>
					</dependency>
				</dependencies>
				<configuration>
					<resourceBundles>
						<resourceBundle>dev.vality:shared-resources:${shared-resources.version}</resourceBundle>
					</resourceBundles>
					<attachToMain>false</attachToMain>
					<attachToTest>false</attachToTest>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>process</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
